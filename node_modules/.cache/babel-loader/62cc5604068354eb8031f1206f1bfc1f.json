{"ast":null,"code":"const FIREBASE_DOMAIN = \"https://audiophile-50083-default-rtdb.firebaseio.com\";\nexport async function getData(type) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get data\");\n  }\n\n  const items = [];\n\n  for (const key in data) {\n    const itemsObj = {\n      id: key,\n      ...data[key]\n    };\n    items.push(itemsObj);\n  }\n\n  if (!type) {\n    return items;\n  }\n\n  const filtered = items.filter(el => el.category === type);\n  return filtered;\n}\nexport async function getSingleProduct(product) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get data\");\n  }\n\n  const items = [];\n\n  for (const key in data) {\n    const itemsObj = {\n      id: key,\n      ...data[key]\n    };\n    items.push(itemsObj);\n  }\n\n  const filtered = items.filter(el => el.name === product);\n  return filtered;\n}","map":{"version":3,"sources":["D:/Projects/audiophile_e_commerce/src/lib/api.js"],"names":["FIREBASE_DOMAIN","getData","type","response","fetch","data","json","ok","Error","message","items","key","itemsObj","id","push","filtered","filter","el","category","getSingleProduct","product","name"],"mappings":"AAAA,MAAMA,eAAe,GAAG,sDAAxB;AAEA,OAAO,eAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAClC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,eAAgB,QAApB,CAA5B;AAEA,QAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,oBAA1B,CAAN;AACD;;AAED,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,MAAMC,GAAX,IAAkBN,IAAlB,EAAwB;AACtB,UAAMO,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEF,GADW;AAEf,SAAGN,IAAI,CAACM,GAAD;AAFQ,KAAjB;AAKAD,IAAAA,KAAK,CAACI,IAAN,CAAWF,QAAX;AACD;;AAED,MAAI,CAACV,IAAL,EAAW;AACT,WAAOQ,KAAP;AACD;;AAED,QAAMK,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACC,QAAH,KAAgBhB,IAArC,CAAjB;AAEA,SAAOa,QAAP;AACD;AAED,OAAO,eAAeI,gBAAf,CAAgCC,OAAhC,EAAyC;AAC9C,QAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,eAAgB,QAApB,CAA5B;AAEA,QAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,oBAA1B,CAAN;AACD;;AAED,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,MAAMC,GAAX,IAAkBN,IAAlB,EAAwB;AACtB,UAAMO,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEF,GADW;AAEf,SAAGN,IAAI,CAACM,GAAD;AAFQ,KAAjB;AAKAD,IAAAA,KAAK,CAACI,IAAN,CAAWF,QAAX;AACD;;AAED,QAAMG,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACI,IAAH,KAAYD,OAAjC,CAAjB;AACA,SAAOL,QAAP;AACD","sourcesContent":["const FIREBASE_DOMAIN = \"https://audiophile-50083-default-rtdb.firebaseio.com\";\r\n\r\nexport async function getData(type) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get data\");\r\n  }\r\n\r\n  const items = [];\r\n\r\n  for (const key in data) {\r\n    const itemsObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    items.push(itemsObj);\r\n  }\r\n\r\n  if (!type) {\r\n    return items;\r\n  }\r\n\r\n  const filtered = items.filter((el) => el.category === type);\r\n\r\n  return filtered;\r\n}\r\n\r\nexport async function getSingleProduct(product) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get data\");\r\n  }\r\n\r\n  const items = [];\r\n\r\n  for (const key in data) {\r\n    const itemsObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    items.push(itemsObj);\r\n  }\r\n\r\n  const filtered = items.filter((el) => el.name === product);\r\n  return filtered;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}