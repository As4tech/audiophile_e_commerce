{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\audiophile_e_commerce\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n  totalPrice: 0,\n  cartIsShown: false\n};\nexport const CartContext = /*#__PURE__*/React.createContext({\n  items: [],\n  totalAmount: 0,\n  cartIsShown: false,\n  totalPrice: 0,\n  addItem: item => {},\n  removeItem: item => {},\n  clearCart: () => {},\n  toggleCart: () => {}\n});\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotalPrice = state.totalPrice + action.item.amount * action.item.price;\n    const totalAmountItems = state.totalAmount + action.item.amount;\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingItemIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat({ ...action.item,\n        amount: action.item.amount\n      });\n    }\n\n    const storage = {\n      items: updatedItems,\n      totalPrice: newTotalPrice,\n      totalAmount: totalAmountItems\n    };\n    localStorage.setItem(\"cartItems\", JSON.stringify(storage));\n    return {\n      items: updatedItems,\n      totalPrice: newTotalPrice,\n      totalAmount: totalAmountItems,\n      cartIsShown: state.cartIsShown\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    const newTotal = state.totalPrice - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n\n    const newTotalAmount = updatedItems.length === 0 ? 0 : updatedItems.map(el => el.amount).reduce((acc, cur) => acc + cur);\n    return {\n      items: updatedItems,\n      totalPrice: newTotal,\n      totalAmount: newTotalAmount,\n      cartIsShown: state.cartIsShown\n    };\n  }\n\n  if (action.type === \"STORAGE\") {\n    return {\n      items: action.data.items,\n      totalAmount: action.data.totalAmount,\n      totalPrice: action.data.totalPrice\n    };\n  }\n\n  if (action.type === \"TOGGLE\") {\n    const newToggle = !state.cartIsShown;\n    return {\n      items: state.items,\n      totalAmount: state.totalAmount,\n      cartIsShown: newToggle,\n      totalPrice: state.totalPrice\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    localStorage.removeItem(\"cartItems\");\n    return { ...defaultCartState\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCartState);\n  useEffect(() => {\n    if (localStorage.getItem(\"cartItems\")) {\n      dispatchAction({\n        type: \"STORAGE\",\n        data: JSON.parse(localStorage.getItem(\"cartItems\"))\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const onAddToCartHandler = item => {\n    dispatchAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const clearCartHandler = () => {\n    dispatchAction({\n      type: \"CLEAR\"\n    });\n  };\n\n  const toggleCartHandler = () => {\n    dispatchAction({\n      type: \"TOGGLE\"\n    });\n  };\n\n  const cartContextValue = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: onAddToCartHandler,\n    removeItem: removeItemHandler,\n    toggleCart: toggleCartHandler,\n    cartIsShown: cartState.cartIsShown,\n    clearCart: clearCartHandler,\n    totalPrice: cartState.totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"Is0lp/DteHiufdmQDwfzc1GtGJY=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["D:/Projects/audiophile_e_commerce/src/store/CartProvider.js"],"names":["React","useEffect","useReducer","defaultCartState","items","totalAmount","totalPrice","cartIsShown","CartContext","createContext","addItem","item","removeItem","clearCart","toggleCart","cartReducer","state","action","type","newTotalPrice","amount","price","totalAmountItems","existingItemIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","storage","localStorage","setItem","JSON","stringify","newTotal","filter","newTotalAmount","length","map","el","reduce","acc","cur","data","newToggle","ContextProvider","props","cartState","dispatchAction","getItem","parse","onAddToCartHandler","removeItemHandler","clearCartHandler","toggleCartHandler","cartContextValue","children"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n  totalPrice: 0,\r\n  cartIsShown: false,\r\n};\r\n\r\nexport const CartContext = React.createContext({\r\n  items: [],\r\n  totalAmount: 0,\r\n  cartIsShown: false,\r\n  totalPrice: 0,\r\n  addItem: (item) => {},\r\n  removeItem: (item) => {},\r\n  clearCart: () => {},\r\n  toggleCart: () => {},\r\n});\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const newTotalPrice =\r\n      state.totalPrice + action.item.amount * action.item.price;\r\n\r\n    const totalAmountItems = state.totalAmount + action.item.amount;\r\n\r\n    const existingItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingItem = state.items[existingItemIndex];\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem) {\r\n      const updatedItem = {\r\n        ...existingItem,\r\n        amount: existingItem.amount + action.item.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n\r\n      updatedItems[existingItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat({\r\n        ...action.item,\r\n        amount: action.item.amount,\r\n      });\r\n    }\r\n\r\n    const storage = {\r\n      items: updatedItems,\r\n      totalPrice: newTotalPrice,\r\n      totalAmount: totalAmountItems,\r\n    };\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(storage));\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalPrice: newTotalPrice,\r\n      totalAmount: totalAmountItems,\r\n      cartIsShown: state.cartIsShown,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingItem = state.items[existingItemIndex];\r\n    const newTotal = state.totalPrice - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingItemIndex] = updatedItem;\r\n    }\r\n\r\n    const newTotalAmount =\r\n      updatedItems.length === 0\r\n        ? 0\r\n        : updatedItems.map((el) => el.amount).reduce((acc, cur) => acc + cur);\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalPrice: newTotal,\r\n      totalAmount: newTotalAmount,\r\n      cartIsShown: state.cartIsShown,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"STORAGE\") {\r\n    return {\r\n      items: action.data.items,\r\n      totalAmount: action.data.totalAmount,\r\n      totalPrice: action.data.totalPrice,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"TOGGLE\") {\r\n    const newToggle = !state.cartIsShown;\r\n\r\n    return {\r\n      items: state.items,\r\n      totalAmount: state.totalAmount,\r\n      cartIsShown: newToggle,\r\n      totalPrice: state.totalPrice,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    localStorage.removeItem(\"cartItems\");\r\n    return {\r\n      ...defaultCartState,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst ContextProvider = (props) => {\r\n  const [cartState, dispatchAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"cartItems\")) {\r\n      dispatchAction({\r\n        type: \"STORAGE\",\r\n        data: JSON.parse(localStorage.getItem(\"cartItems\")),\r\n      });\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onAddToCartHandler = (item) => {\r\n    dispatchAction({\r\n      type: \"ADD\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatchAction({\r\n      type: \"REMOVE\",\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchAction({\r\n      type: \"CLEAR\",\r\n    });\r\n  };\r\n\r\n  const toggleCartHandler = () => {\r\n    dispatchAction({\r\n      type: \"TOGGLE\",\r\n    });\r\n  };\r\n\r\n  const cartContextValue = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: onAddToCartHandler,\r\n    removeItem: removeItemHandler,\r\n    toggleCart: toggleCartHandler,\r\n    cartIsShown: cartState.cartIsShown,\r\n    clearCart: clearCartHandler,\r\n    totalPrice: cartState.totalPrice,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContextValue}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}